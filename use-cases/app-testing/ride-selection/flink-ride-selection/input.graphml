<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- graph attributes -->
  <key id="topicCfg" for="graph" attr.name="topicConfig" attr.type="string"/>
  
  <!-- node attributes -->
  <key id="zk" for="node" attr.name="zookeeper" attr.type="int"/>
  <key id="brokerCfg" for="node" attr.name="brokerConfig" attr.type="string"/>
  <key id="prodType" for="node" attr.name="producerType" attr.type="string"/>   <!-- producer type can be SFST/MFMT/RND; MFMT,RND not supported right now. -->
  <key id="prodCfg" for="node" attr.name="producerConfig" attr.type="string"/>  <!-- for SFST: one pair of filePath, topicName; for MFMT: multiple pair of filePaths, topicNames; -->
  <key id="consType" for="node" attr.name="consumerType" attr.type="string"/>   <!-- consumer type can be STANDARD/CUSTOM;if it is CUSTOM, it will also contain the consumer script path -->
  <key id="consCfg" for="node" attr.name="consumerConfig" attr.type="string"/>  <!-- consConfig will contain the topic name(s) from where the consumer will consume --> 
  <key id="streamProcType" for="node" attr.name="streamProcType" attr.type="string"/> <!-- Stream processing engine type (e.g., Spark, Flink, KStream) --> 
  <key id="streamProcCfg" for="node" attr.name="streamProcConfig" attr.type="string"/>    <!-- streamProcConfig will contain the stream processing application path and topic name(s)/output directory from where the SPE ingest its processed output --> 

  <!-- edge attributes -->
  <key id="bw" for="edge" attr.name="bandwidth" attr.type="int"/>
  <key id="lat" for="edge" attr.name="latency" attr.type="int"/>
  <key id="st" for="edge" attr.name="sport" attr.type="int"/>
  <key id="dt" for="edge" attr.name="dport" attr.type="int"/>
  
   
  <graph id="simple-topo" edgedefault="undirected">
    <data key="topicCfg">use-cases/app-testing/ride-selection/flink-ride-selection/yamlConfig/topicConfiguration.yaml</data>

    <node id="h1">
      <data key="zk">1</data>
      <data key="brokerCfg">use-cases/app-testing/ride-selection/flink-ride-selection/yamlConfig/broker.yaml</data>
      <data key="prodType">SFST</data>
      <data key="prodCfg">use-cases/app-testing/ride-selection/flink-ride-selection/yamlConfig/producerConfigurationHost1.yaml</data>
      <data key="consType">STANDARD</data>
      <data key="consCfg">use-cases/app-testing/ride-selection/flink-ride-selection/yamlConfig/consumerConfigurationHost1.yaml</data>
	  </node>            
    
    <node id="s1"/>
    <node id="s2"/>

    <node id="h2">
      <data key="brokerCfg">use-cases/app-testing/ride-selection/flink-ride-selection/yamlConfig/broker.yaml</data>
      <data key="prodType">SFST</data>
      <data key="prodCfg">use-cases/app-testing/ride-selection/flink-ride-selection/yamlConfig/producerConfigurationHost2.yaml</data>
      <data key="consType">STANDARD</data>
      <data key="consCfg">use-cases/app-testing/ride-selection/flink-ride-selection/yamlConfig/consumerConfigurationHost2.yaml</data>
      <data key="streamProcType">Flink</data>
      <data key="streamProcCfg">use-cases/app-testing/ride-selection/flink-ride-selection/yamlConfig/spe-1.yaml</data>
	  </node>            

    <edge source="h1" target="s1">
		<data key="bw">1</data>
		<data key="lat">20</data>
		<data key="st">1</data>
		<data key="dt">1</data>
    </edge>
    <edge source="s1" target="s2">
		<data key="bw">5</data>
		<data key="lat">10</data>
		<data key="st">3</data>
		<data key="dt">2</data>
    </edge>
    <edge source="s2" target="h2">
		<data key="bw">1</data>
		<data key="lat">20</data>
		<data key="st">1</data>
		<data key="dt">1</data>
    </edge>
  </graph>
</graphml>
