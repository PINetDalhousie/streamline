import matplotlib.pyplot as plt 
from mpl_toolkits.mplot3d import Axes3D
import numpy as np
from matplotlib.lines import Line2D


X = np.array([[10, 10, 10], [20, 20, 20], [1000, 1000, 1000]]) # Link bandwidth values 
Y = np.array([[30, 150, 300], [100, 300, 600], [300, 600, 900]]) # Message rate values 
Z = [] # Aggregated throughput values
# Z = [[0.0, 0.016568199999999998, 0.08441020000000002, 0.0601818, 0.07949780000000002, 0.0451678, 0.002894, 0.0025291999999999997, 0.0148796, 0.097125, 0.3521137999999999, 0.5038382, 0.5049188, 0.5154466, 0.4862041999999999, 0.5063788, 0.5297637999999999, 0.4598054000000001, 0.4984744000000001, 0.4787704, 0.5087234, 0.5014375999999999, 0.5134824, 0.49543660000000006, 0.5105268, 0.471636, 0.510468, 0.4982882, 0.5105708, 0.4921046, 0.4881916, 0.5108311999999999, 0.49503140000000007, 0.5123652, 0.4678260000000001, 0.5346780000000001, 0.4819212, 0.47434980000000004, 0.5269628000000001, 0.48049640000000005, 0.5030984, 0.5166433999999999, 0.533137, 0.5444034, 0.5133634, 0.5378911999999999, 0.490143, 0.5114074000000001, 0.5143135999999999, 0.48011660000000006, 0.5277455999999999, 0.5925935999999999, 0.5320832, 0.4740825999999999, 0.5035475999999999, 0.5174902, 0.46058879999999996, 0.5332422000000001, 0.4790426000000001, 0.49366619999999994, 0.5255726000000001, 0.5078264, 0.4962133999999999, 0.526177, 0.4653846000000001, 0.48410819999999993, 0.5405804000000001, 0.5235581999999999, 0.4979576, 0.5648558], [0.0, 0.017130000000000003, 0.0887648, 0.0594328, 0.07921480000000002, 0.042207, 0.0028423999999999997, 0.0025291999999999997, 0.014990799999999999, 0.11890840000000001, 1.4361851999999997, 1.4611910000000001, 1.4517465999999999, 1.3809193999999998, 1.3924462, 1.2568622000000003, 1.3785186, 1.3730027999999999, 1.5555254, 1.5337904, 1.547943, 1.0156858, 1.5544174, 1.6565980000000002, 1.1401212, 1.9684104, 1.1889338, 1.6570825999999999, 1.2694041999999996, 1.4270695999999998, 1.6292605999999998, 1.4091738, 1.6582318, 1.1498464, 1.5498446000000001, 1.6806142, 1.5608502, 1.3472993999999998, 1.548683, 1.3333434, 1.2622408, 1.6473668000000001, 1.2831556000000002, 1.3788652, 1.3853034000000002, 1.4418990000000003, 1.3900888, 1.3744866, 1.560995, 1.5429233999999998, 1.265074, 1.4521128, 1.4417593999999998, 1.4934978, 1.4924628, 1.3778178, 1.4703014, 1.3382694, 1.2843235999999998, 1.502184, 1.418828, 1.4514626, 1.5104035999999998, 1.3379584, 1.4069656, 1.4270752, 1.3890268000000001, 1.3291613999999998, 1.436667, 1.5924436000000002, 1.3758952, 1.2271476, 1.512914], [0.0, 0.0170804, 0.0864844, 0.06134799999999999, 0.06832819999999999, 0.05521379999999999, 0.0030339999999999994, 0.0025244, 0.015641199999999997, 0.1201792, 2.2641188, 2.9805002000000003, 2.7489669999999995, 2.8011574000000006, 2.4560166, 2.7503935999999998, 2.7181552000000004, 2.7057172, 2.8498058, 2.763527200000001, 3.3401296, 2.7686650000000004, 2.8669568, 2.6151692, 2.6674686000000007, 2.6064534, 2.664351, 2.9104462, 2.8042606000000005, 2.8388544000000002, 2.9185554000000002, 2.5709388000000004, 2.84724, 2.7261606, 2.7165003999999997, 3.1622078000000005, 2.9214910000000005, 2.5863604, 3.0279605999999997, 2.5731984000000003, 2.9441577999999997, 2.5354165999999996, 2.8984103999999995, 3.2192998000000004, 2.536592, 2.4678132000000006, 3.0982131999999996, 3.2016628, 2.3119369999999995, 3.3986960000000006, 2.2721698, 3.0950222000000003, 2.704385, 3.3526622, 2.3816083999999997, 2.9915122000000003, 2.4289746, 2.6197541999999996, 2.7422543999999998, 2.502936, 2.6559057999999993, 2.6293122, 2.6808590000000003, 2.6598091999999998, 2.7058232, 2.7927314, 2.8848458, 2.2968546, 2.6802504, 2.9249604000000002, 2.4614408, 2.7622088], [0.0, 0.0170132, 0.0831726, 0.061575, 0.0772086, 0.048709, 0.00295, 0.0025775999999999998, 0.0156648, 0.115371, 1.1164344, 1.616338, 1.6069847999999998, 1.5692166, 1.6029657999999998, 1.5841408, 1.6089897999999998, 1.5986518, 1.5525337999999997, 1.595017, 1.5832434, 1.5859276, 1.5515302, 1.5932812000000003, 1.5576956000000002, 1.5707456000000002, 1.5631832, 1.5635556000000002, 1.563792, 1.5736017999999998, 1.5948546000000001, 1.5561278, 1.575659, 1.5897696000000001, 1.5642472, 1.5657738, 1.5812956, 1.570031, 1.5661806, 1.5818516, 1.6002088, 1.564299, 1.5781448, 1.5617792, 1.5668744000000001, 1.561586, 1.5592241999999996, 1.6065728, 1.5467307999999997, 1.5811956, 1.5854335999999998, 1.548507, 1.569389, 1.58776, 1.5667522000000003, 1.6198896, 1.5879122, 1.5794322000000003, 1.562151, 1.5904762, 1.580093, 1.5378387999999998, 1.5755142, 1.5562314000000002, 1.5804672000000002, 1.575446, 1.5706576, 1.5609971999999999, 1.590174, 1.5649381999999996], [0.0, 0.017095999999999997, 0.0829578, 0.056292999999999996, 0.07981919999999998, 0.0500424, 0.0029692000000000004, 0.0025704, 0.0143072, 0.15074819999999997, 3.4264720000000004, 4.643461599999999, 3.9411589999999994, 4.124910399999999, 4.3897864, 3.7099650000000004, 4.6850192, 3.800241, 4.285130999999999, 4.260222, 3.8880136, 4.609777800000001, 4.0273357999999995, 4.04593, 4.3902896, 3.9472161999999997, 4.077838999999999, 4.0329414, 4.3739094000000005, 3.9030259999999997, 4.1395181999999995, 4.6744716, 3.7585339999999996, 4.357473000000001, 4.3228194, 3.7300457999999996, 4.687512999999999, 4.2078446000000005, 3.9185328000000004, 4.411290000000001, 3.7161154000000005, 4.334252800000001, 4.299787599999999, 4.45604, 3.973797400000001, 4.091568199999999, 4.019802, 4.3775146, 4.006277, 4.2374496, 4.539238400000001, 3.7738308, 4.2930568, 4.3965906, 3.8126708000000002, 4.5106602, 4.112181, 4.0279252, 4.7513537999999995, 3.9687226, 4.1358228, 4.3561397999999985, 3.722334, 4.2951806, 4.322520600000001, 4.096491400000001, 4.735662400000002, 3.775124, 4.384850799999999, 4.3296666], [0.0, 0.012115999999999998, 0.06767240000000001, 0.0468408, 0.0559194, 0.063064, 0.0180104, 0.0024832, 0.015176400000000001, 0.112643, 3.8762688, 5.489695599999998, 5.401668, 5.085003, 4.6697214, 5.0265683999999995, 4.8547726, 4.840728400000001, 5.2390682, 5.192352400000001, 5.2167002, 5.2532825999999995, 5.411432999999999, 5.414619600000001, 5.545706399999999, 5.4626634, 5.6086356, 5.502590800000001, 5.227122400000001, 5.611515799999999, 7.4639072, 5.6186752, 5.495808000000001, 6.4697796, 4.814357800000001, 5.726372800000001, 5.6123762, 5.3184895999999995, 5.7152572, 5.145867, 5.451427, 6.0118722, 5.1663402, 5.5779024, 5.545318200000001, 5.4590388, 5.5450266, 5.7782653999999996, 5.515080199999999, 5.7348052, 4.3593444, 6.076486399999999, 4.8249504, 6.0565252, 5.400079600000001, 5.0163184, 5.8539582, 4.794317, 5.5908394, 5.5733772, 6.107925399999999, 5.1703754, 5.477670799999999, 5.5830304, 5.6319436000000005, 5.317356, 5.526807600000001, 5.5019902, 5.473769399999999, 5.6986566, 5.347647], [0.0, 0.016847599999999997, 0.0828942, 0.056282599999999995, 0.073753, 0.0580954, 0.003004, 0.0024784, 0.015598800000000001, 0.1670526, 4.3018708000000005, 3.6128008, 4.6657464000000015, 3.5509521999999993, 4.328608200000001, 4.6625424, 4.3202012, 3.5426766, 4.667182999999999, 4.099957000000001, 3.7532602, 4.664203199999999, 3.9283249999999996, 3.9250888, 4.659310799999999, 3.931157200000001, 3.922869800000001, 3.9277117999999995, 3.9253926000000003, 4.6674442, 4.1466956, 3.7196826000000005, 4.6667314, 3.9308896, 3.9264889999999997, 4.659600199999999, 3.9346076000000005, 3.9387412000000004, 4.6594052, 3.7168731999999998, 4.147777, 3.9286527999999996, 4.663168999999999, 3.9318537999999994, 3.9248712, 4.670766400000001, 3.9255585999999996, 3.9322668, 3.9410635999999992, 3.9132924, 4.657654399999998, 4.352269, 3.5152276000000002, 4.663856, 3.6282858, 4.2371832000000005, 4.666903199999999, 3.264694, 4.6078272, 4.303896000000001, 3.5893486, 4.626127, 4.302961399999999, 3.5647244, 4.659304799999998, 3.9337636000000002, 3.9337406000000006, 4.6671292, 3.9395258, 3.92702], [0.0, 0.010704600000000002, 0.0699826, 0.0507644, 0.060656, 0.06530280000000001, 0.0140622, 0.0024544, 0.015698800000000002, 0.103984, 5.060616799999999, 6.3900011999999995, 6.3926636, 6.5182684, 7.110723000000001, 6.896170800000001, 6.752265400000001, 6.406765399999999, 6.8553972, 6.705477, 6.7313754, 6.384078599999999, 6.274326, 6.2730922, 6.5532487999999995, 7.134395400000001, 6.609686600000001, 6.312350200000001, 7.1367528, 6.383840199999999, 6.4836182, 6.6554714, 6.942124800000001, 6.288965400000001, 6.552251200000001, 6.537815199999999, 6.738618600000001, 6.513181200000001, 6.309149199999999, 6.4832218, 6.642615199999999, 6.9344404, 6.6500106, 6.366674799999999, 6.5197458, 6.633200400000001, 6.7874946000000005, 6.7039172, 6.563648, 6.6829252000000015, 7.0246352000000005, 6.290014200000001, 7.1276551999999995, 6.9123218, 6.294391399999999, 7.0181444, 6.5086712, 6.3447458, 7.0586632, 6.575766600000001, 6.479463, 6.484001200000001, 6.996924600000001, 6.785375600000001, 6.5155796, 6.4936484000000005, 6.9977588, 6.613122, 6.5071318, 6.4755564, 6.5894927999999995, 6.8436124000000005], [0.0, 0.017214799999999995, 0.0659824, 0.051264399999999995, 0.0654664, 0.06693239999999999, 0.017283200000000002, 0.0025704, 0.0135424, 0.9640167999999999, 5.8670734, 7.0994237999999985, 7.2175844, 7.3791622, 7.1867453999999995, 7.7252008, 6.815474399999999, 8.121104599999999, 7.169694600000001, 7.5630847999999995, 7.186839600000001, 7.9759292, 7.487978200000001, 7.711375599999999, 8.043948, 8.2793036, 7.1399622, 8.20464, 7.510694399999998, 7.9838786, 8.242064999999998, 7.485204199999999, 8.1711986, 7.9148597999999994, 7.922633599999999, 7.958358799999999, 8.156983199999999, 7.985027400000001, 7.8865962, 7.9388933999999995, 7.464930399999999, 7.874020600000001, 8.044639799999999, 7.2485602, 7.896906000000001, 8.5692576, 8.0072914, 7.6756692, 8.0801578, 7.858964799999999, 7.444814199999999, 8.5966662, 7.8711686, 8.515912399999998, 7.513489399999999, 8.1534064, 7.884243, 8.0502152, 7.923596600000001, 7.706928200000001, 8.2558702, 8.4807022, 7.6266592000000015, 8.2072924, 7.8800338000000005, 7.717202, 8.1805274, 8.3685204, 7.436642399999999, 7.909505199999999, 7.8229622, 7.070658800000001, 8.1396704]]

# ***************** Aggregated throughput value extraction from logs *******************

for i, x_inner in enumerate(X):
    for y_value in Y[i]:
        # print("For X[{}][0] = {}, Y value is: {}".format(i, x_inner[0], y_value))
        with open('use-cases/varying-networking-conditions/varying-link-bw/military-coordination/logs/'+str(x_inner[0])+'Mbps/scenario-'+str(y_value)+'msgPs/bandwidth/aggregated-throughput.txt') as f:
                    # Read lines from the file
                    lines = f.readlines()
                    # Get the values after the space in each line
                    values = [float(line.split()[1]) for line in lines]
                    # print("Length of values: {}".format(len(values)))
                    # print("Max aggregated throughput value for X[{}][0] = {}, Y value = {} is: {}".format(i, x_inner[0], y_value, max(values)))
                    Z.append(values)
# print("Length of Z: {}".format(len(Z)))
# print(Z)

# # ***************** Shape matching *******************
# Ensure all inner lists in Z are of length 70
Z_padded = []

for z_inner in Z:
    if len(z_inner) > 70:
        # Truncate the list to the first 70 elements
        Z_padded.append(z_inner[:70])
        # print(max(Z_padded))
    elif len(z_inner) < 70:
        # Pad the list with 0s to reach length 70
        Z_padded.append(z_inner + [0]*(70 - len(z_inner)))
    else:
        # If the list is already of length 70, just append it as is
        Z_padded.append(z_inner)

Z = np.array(Z_padded)

# Flatten X and Y
X_flat = X.flatten()
Y_flat = Y.flatten()

# Repeat each element 70 times and reshape to (9, 70)
X = np.repeat(X_flat, 70).reshape(9, 70)
Y = np.repeat(Y_flat, 70).reshape(9, 70)
# print("X: {}".format(X))
# print("Y: {}".format(Y))    

#******************** 3D plot generation *******************************        
fig = plt.figure() 
ax = fig.add_subplot(111, projection='3d')
surf = ax.plot_surface(X, Y, Z, cmap='viridis')

ax.set_xlabel('Link bandwidth (Mbps)', labelpad=1, fontweight='bold', fontsize=12) 
ax.set_ylabel('Message rate (msg/s)', labelpad=1, fontweight='bold', fontsize=12) 
ax.set_zlabel('Aggregated Throughput (MBytes/s)', labelpad=10, fontweight='bold', fontsize=12) 
# ax.set_title('3D plot of three plots') 

# plt.show()
plt.savefig('/home/monzurul/Desktop/streamline/use-cases/varying-networking-conditions/varying-link-bw/military-coordination/plots/3d-plot.pdf', format="pdf", dpi=300, bbox_inches='tight')